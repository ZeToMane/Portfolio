---
import Main from '../layouts/Main.astro'
import Window from '../components/Window.astro'
import Content from '../components/WindowContent.astro'
import MainContent from '../components/MainContent.vue'
import ThreeCanvas from '../components/ThreeCanvas'

---


<Main title="Pedro Barros Parente">
	<div id="background-canvas" class="fixed w-full h-screen z-0"></div>
	<main class="p-12 flex w-screen h-screen z-10 2xl:h-fit sm:p-8">
		<section class="section grid grid-cols-12 grid-rows-2 gap-6 w-full h-full 2xl:grid-rows-none">
			<Window title="Pedro Barros Parente" custom="col-span-4 row-span-1 scale-anim md:col-span-6 sm:col-span-12">
				<!-- <img src="/profile-img.png" alt="" class="w-full h-full object-cover aspect-[12]"> -->
				<!-- <div class="w-full h-full" id="root">
					<ThreeCanvas client:only="react"/>
				</div> -->
				<ThreeCanvas client:only="react" />
			</Window>
			
			<Window title="Contact" custom="col-span-4 row-span-1 row-start-2 scale-anim 2xl:row-start-auto lg:col-span-5 md:col-span-6 sm:col-span-12">
				<Content custom="flex-col">
					<p class="md:text-sm">Nom: <span>Pedro Barros Parente</span></p>
					<p class="md:text-sm">Âge: <span>23 ans</span></p>
					<p class="md:text-sm">E-mail: <span>parente.pb@gmail.com</span></p>
					<p class="md:text-sm">Téléphone: <span>06 13 75 08 00</span></p>
				</Content>
				<Content custom="justify-center flex-row">
					<a href="https://drive.google.com/file/d/1luKJh2DxpSoFZNAczKFFxAmi-KnaduIz/view?usp=sharing" target="_blank">CV</a>
					<a href="https://fr.linkedin.com/in/pedro-barros-parente-946945252?trk=people_directory" target="_blank">Linkedin</a>
					<a href="https://github.com/ZeToMane" target="_blank">GitHub</a>
				</Content>
			</Window>

			<div class="col-span-6 row-span-2 scale-anim 2xl:row-start-2 2xl:col-span-8 2xl:row-span-1 lg:col-span-9 sm:col-span-12 sm:row-start-auto">
				<MainContent client:load/>
			</div>

			<Window title="Lastest Demo" custom="col-span-2 row-span-2 scale-anim overflow-hidden 2xl:col-span-4 2xl:row-span-2 lg:col-span-3 md:row-span-1 md:row-start-2 sm:col-span-12 sm:row-start-auto">
				<div id="demo-canvas" class="w-full h-[95%] overflow-hidden"></div>
			</Window>
		</section>
	</main>
</Main>

<style lang="scss">
	span{
		letter-spacing: 2px;
	}
	// @media (max-width: 1535px) {
	// 	section{
	// 		grid-template-rows: repeat(auto-fill, minmax(0, auto));
	// 	}
	// }
	@media (max-width: 1440px) {
		.section{
			grid-auto-rows: 1fr 2fr;
		}
	}
	@media (max-width: 1024px) {
		.section{
			grid-auto-rows: 1fr 2.2fr;
		}
	}
	@media (max-width: 768px) {
		.section{
			grid-auto-rows: 1fr 2.5fr;
		}
	}
	@media (max-width: 480px) {
		.section{
			grid-auto-rows: 2.5fr 2.5fr 6.8fr 2.5fr;
		}
	}
	

</style>

<script is:inline src="/js/p5.min.js"></script>

<script>
import {gsap} from 'gsap';

import { createSketch, createSketch2 } from '../script/backgroundAnim.js';
import TextScramble from '../script/scrambleText.js'

const h2Texts = [];
const h2Elements = document.getElementsByTagName('H2');
for (const h2 of h2Elements) {
	h2Texts.push(h2.innerText);
	h2.innerText = '';
}

const pTexts = [];
const pElements = Array.from(document.getElementsByTagName('P')).filter(p => !p.classList.contains('text-about'));
for (const p of pElements) {
	pTexts.push(p.innerText);
	p.innerText = '';
}

const aTexts = [];
const aElements = document.getElementsByTagName('A');
for (const a of aElements) {
	aTexts.push(a.innerText);
	a.innerText = '';
}


window.addEventListener("DOMContentLoaded", function () {
	console.log("ggggsap");
	new p5(createSketch);
	new p5(createSketch2);

	gsap.delayedCall(0.3, restoreH2Texts);
	gsap.delayedCall(0.2, restorePTexts);
	gsap.delayedCall(0.2, restoreATexts);

	
});

function restoreH2Texts() {
    const el = document.getElementsByTagName('H2');
	
    for (let i = 0; i < h2Texts.length; ++i) {
		const fx = new TextScramble(el[i]);
		// el[i].innerText = h2Texts[i];
		fx.setText(h2Texts[i]);
		console.log(h2Texts[i]);
    }
}

function restorePTexts() {
    const el = document.getElementsByTagName('P');
	
    for (let i = 0; i < pTexts.length; ++i) {
		const fx = new TextScramble(el[i]);
		// el[i].innerText = h2Texts[i];
		fx.setText(pTexts[i]);
		console.log(pTexts[i]);
    }
}

function restoreATexts() {
    const el = document.getElementsByTagName('A');
	
    for (let i = 0; i < aTexts.length; ++i) {
		const fx = new TextScramble(el[i]);
		// el[i].innerText = h2Texts[i];
		fx.setText(aTexts[i]);
		console.log(aTexts[i]);
    }
}
</script>
